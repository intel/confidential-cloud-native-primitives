// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/measurement-server.proto

package getMeasurement

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TYPE int32

const (
	TYPE_PAAS TYPE = 0
	TYPE_SAAS TYPE = 1
)

var TYPE_name = map[int32]string{
	0: "PAAS",
	1: "SAAS",
}

var TYPE_value = map[string]int32{
	"PAAS": 0,
	"SAAS": 1,
}

func (x TYPE) String() string {
	return proto.EnumName(TYPE_name, int32(x))
}

func (TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52ee6f800ca253e4, []int{0}
}

type CATEGORY int32

const (
	CATEGORY_TEE_REPORT CATEGORY = 0
	CATEGORY_TPM        CATEGORY = 1
	CATEGORY_TDX_RTMR   CATEGORY = 2
)

var CATEGORY_name = map[int32]string{
	0: "TEE_REPORT",
	1: "TPM",
	2: "TDX_RTMR",
}

var CATEGORY_value = map[string]int32{
	"TEE_REPORT": 0,
	"TPM":        1,
	"TDX_RTMR":   2,
}

func (x CATEGORY) String() string {
	return proto.EnumName(CATEGORY_name, int32(x))
}

func (CATEGORY) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_52ee6f800ca253e4, []int{1}
}

type GetMeasurementRequest struct {
	MeasurementType      TYPE     `protobuf:"varint,1,opt,name=measurement_type,json=measurementType,proto3,enum=measurement.TYPE" json:"measurement_type,omitempty"`
	MeasurementCategory  CATEGORY `protobuf:"varint,2,opt,name=measurement_category,json=measurementCategory,proto3,enum=measurement.CATEGORY" json:"measurement_category,omitempty"`
	ReportData           string   `protobuf:"bytes,3,opt,name=report_data,json=reportData,proto3" json:"report_data,omitempty"`
	RegisterIndex        int32    `protobuf:"varint,4,opt,name=register_index,json=registerIndex,proto3" json:"register_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeasurementRequest) Reset()         { *m = GetMeasurementRequest{} }
func (m *GetMeasurementRequest) String() string { return proto.CompactTextString(m) }
func (*GetMeasurementRequest) ProtoMessage()    {}
func (*GetMeasurementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52ee6f800ca253e4, []int{0}
}

func (m *GetMeasurementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeasurementRequest.Unmarshal(m, b)
}
func (m *GetMeasurementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeasurementRequest.Marshal(b, m, deterministic)
}
func (m *GetMeasurementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeasurementRequest.Merge(m, src)
}
func (m *GetMeasurementRequest) XXX_Size() int {
	return xxx_messageInfo_GetMeasurementRequest.Size(m)
}
func (m *GetMeasurementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeasurementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeasurementRequest proto.InternalMessageInfo

func (m *GetMeasurementRequest) GetMeasurementType() TYPE {
	if m != nil {
		return m.MeasurementType
	}
	return TYPE_PAAS
}

func (m *GetMeasurementRequest) GetMeasurementCategory() CATEGORY {
	if m != nil {
		return m.MeasurementCategory
	}
	return CATEGORY_TEE_REPORT
}

func (m *GetMeasurementRequest) GetReportData() string {
	if m != nil {
		return m.ReportData
	}
	return ""
}

func (m *GetMeasurementRequest) GetRegisterIndex() int32 {
	if m != nil {
		return m.RegisterIndex
	}
	return 0
}

type GetMeasurementReply struct {
	Measurement          string   `protobuf:"bytes,1,opt,name=measurement,proto3" json:"measurement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeasurementReply) Reset()         { *m = GetMeasurementReply{} }
func (m *GetMeasurementReply) String() string { return proto.CompactTextString(m) }
func (*GetMeasurementReply) ProtoMessage()    {}
func (*GetMeasurementReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_52ee6f800ca253e4, []int{1}
}

func (m *GetMeasurementReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeasurementReply.Unmarshal(m, b)
}
func (m *GetMeasurementReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeasurementReply.Marshal(b, m, deterministic)
}
func (m *GetMeasurementReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeasurementReply.Merge(m, src)
}
func (m *GetMeasurementReply) XXX_Size() int {
	return xxx_messageInfo_GetMeasurementReply.Size(m)
}
func (m *GetMeasurementReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeasurementReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeasurementReply proto.InternalMessageInfo

func (m *GetMeasurementReply) GetMeasurement() string {
	if m != nil {
		return m.Measurement
	}
	return ""
}

func init() {
	proto.RegisterEnum("measurement.TYPE", TYPE_name, TYPE_value)
	proto.RegisterEnum("measurement.CATEGORY", CATEGORY_name, CATEGORY_value)
	proto.RegisterType((*GetMeasurementRequest)(nil), "measurement.GetMeasurementRequest")
	proto.RegisterType((*GetMeasurementReply)(nil), "measurement.GetMeasurementReply")
}

func init() { proto.RegisterFile("proto/measurement-server.proto", fileDescriptor_52ee6f800ca253e4) }

var fileDescriptor_52ee6f800ca253e4 = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x86, 0xe3, 0x36, 0x40, 0x3a, 0x01, 0x63, 0xb6, 0x54, 0xb2, 0x7a, 0x00, 0xcb, 0x12, 0x52,
	0x54, 0xc9, 0xb6, 0x28, 0x07, 0x2e, 0x5c, 0x42, 0x6b, 0x15, 0x0e, 0x51, 0xad, 0xed, 0x1e, 0x12,
	0x2e, 0xd6, 0xc6, 0x1e, 0xcc, 0x4a, 0xfe, 0x62, 0xbd, 0x8e, 0xf0, 0x2f, 0xe6, 0x6f, 0x20, 0x3b,
	0x44, 0xac, 0x51, 0xd4, 0xdb, 0xe8, 0x99, 0x8f, 0x9d, 0x77, 0xf6, 0x85, 0x37, 0xb5, 0xac, 0x54,
	0x15, 0x14, 0xc8, 0x9b, 0x56, 0x62, 0x81, 0xa5, 0xf2, 0x1a, 0x94, 0x3b, 0x94, 0xfe, 0x90, 0x20,
	0x73, 0x2d, 0xe3, 0xfe, 0x36, 0xe0, 0xe2, 0x0e, 0xd5, 0xea, 0x1f, 0xa2, 0xf8, 0xb3, 0xc5, 0x46,
	0x91, 0x4f, 0x60, 0x69, 0x85, 0xb1, 0xea, 0x6a, 0xb4, 0x0d, 0xc7, 0x58, 0x98, 0xd7, 0xaf, 0x7c,
	0x2d, 0xe1, 0xb3, 0x4d, 0x14, 0xd2, 0x97, 0x1a, 0x61, 0x5d, 0x8d, 0xe4, 0x0b, 0xbc, 0xd6, 0xbb,
	0x13, 0xae, 0x30, 0xab, 0x64, 0x67, 0x9f, 0x0c, 0x13, 0x2e, 0x46, 0x13, 0x6e, 0x96, 0x2c, 0xbc,
	0xbb, 0xa7, 0x1b, 0x7a, 0xae, 0xd1, 0x9b, 0xbf, 0x1d, 0xe4, 0x2d, 0xcc, 0x25, 0xd6, 0x95, 0x54,
	0x71, 0xca, 0x15, 0xb7, 0x4f, 0x1d, 0x63, 0x71, 0x46, 0x61, 0x8f, 0x6e, 0xb9, 0xe2, 0xe4, 0x1d,
	0x98, 0x12, 0x33, 0xd1, 0x28, 0x94, 0xb1, 0x28, 0x53, 0xfc, 0x65, 0x4f, 0x1d, 0x63, 0xf1, 0x84,
	0xbe, 0x38, 0xd0, 0xaf, 0x3d, 0x74, 0x3f, 0xc2, 0xf9, 0xff, 0x42, 0xeb, 0xbc, 0x23, 0x0e, 0xe8,
	0xf7, 0x18, 0x14, 0x9e, 0x51, 0x1d, 0x5d, 0x5d, 0xc2, 0xb4, 0xd7, 0x48, 0x66, 0x30, 0x8d, 0x96,
	0xcb, 0x07, 0x6b, 0xd2, 0x47, 0x0f, 0x7d, 0x64, 0x5c, 0xbd, 0x87, 0xd9, 0x61, 0x7b, 0x62, 0x02,
	0xb0, 0x30, 0x8c, 0x69, 0x18, 0xdd, 0x53, 0x66, 0x4d, 0xc8, 0x33, 0x38, 0x65, 0xd1, 0xca, 0x32,
	0xc8, 0x73, 0x98, 0xb1, 0xdb, 0x75, 0x4c, 0xd9, 0x8a, 0x5a, 0x27, 0xd7, 0x19, 0xcc, 0xb5, 0x25,
	0xc8, 0x1a, 0xcc, 0xf1, 0x5a, 0xc4, 0x1d, 0x1d, 0xe7, 0xe8, 0xe7, 0x5c, 0x3a, 0x8f, 0xd6, 0xd4,
	0x79, 0xe7, 0x4e, 0x3e, 0x67, 0xdf, 0x30, 0x13, 0xea, 0x47, 0xbb, 0xf5, 0x93, 0xaa, 0x08, 0x44,
	0xa9, 0x30, 0x0f, 0x92, 0xaa, 0xfc, 0x2e, 0x52, 0x2c, 0x95, 0xe0, 0xb9, 0x97, 0xe4, 0x55, 0x9b,
	0x7a, 0x25, 0x57, 0x62, 0x87, 0x5e, 0x2d, 0x45, 0x21, 0xfa, 0xa8, 0x09, 0x7a, 0xb7, 0x88, 0x04,
	0x8f, 0x38, 0x28, 0xd8, 0x5b, 0x2b, 0x1b, 0xbd, 0xb7, 0x7d, 0x3a, 0xd0, 0x0f, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x72, 0x3f, 0x43, 0x37, 0x79, 0x02, 0x00, 0x00,
}
