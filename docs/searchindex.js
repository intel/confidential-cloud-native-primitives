Search.setIndex({"docnames": ["_rst/ccnp", "_rst/ccnp.eventlog", "_rst/ccnp.measurement", "_rst/ccnp.quote", "_rst/modules", "_rst/readme", "_rst/sdk.readme", "_rst/service.eventlog", "_rst/service.measurement", "_rst/service.quote", "index"], "filenames": ["_rst/ccnp.rst", "_rst/ccnp.eventlog.rst", "_rst/ccnp.measurement.rst", "_rst/ccnp.quote.rst", "_rst/modules.rst", "_rst/readme.rst", "_rst/sdk.readme.rst", "_rst/service.eventlog.rst", "_rst/service.measurement.rst", "_rst/service.quote.rst", "index.rst"], "titles": ["ccnp package", "ccnp.eventlog package", "ccnp.measurement package", "ccnp.quote package", "Confidential Cloud-Native Primitives (CCNP)", "Confidential Cloud Native Primitives (CCNP)", "Confidential Cloud-Native Primitives SDK for Python", "Service: CCNP Eventlog Server", "Service: CCNP Measurement Server", "Service: CCNP Quote Service", "Welcome to Confidential Cloud-Native Primitives (CCNP)\u2019s documentation!"], "terms": {"thi": [1, 2, 3, 5, 6, 7, 8, 9, 10], "provid": [1, 2, 3, 4, 5, 7, 8, 9, 10], "definit": [1, 3], "helper": [1, 3], "class": [1, 2, 3], "event": [1, 2, 4, 5, 7, 10], "log": [1, 2, 4, 5, 7, 10], "td": [1, 3, 6], "tpm": [1, 2, 3, 6, 7, 8], "refer": [1, 3, 6, 8], "1": [1, 2, 3, 5, 6, 7, 8, 9, 10], "http": [1, 3, 5], "github": [1, 5], "com": [1, 3, 5, 8], "tpm2": 1, "softwar": [1, 3, 5, 6, 9, 10], "tcti": 1, "uefi": 1, "blob": 1, "master": 1, "src": 1, "tcg2": 1, "protocol": 1, "h": 1, "ccalgorithm": [1, 4], "base": [1, 2, 3, 5, 6, 9, 10], "object": [1, 2, 3], "algorithm": 1, "confidenti": [1, 7, 8, 9], "comput": [1, 3, 5, 8, 9, 10], "The": [1, 3, 6, 7, 8, 9], "ar": [1, 5, 6, 7, 8, 9, 10], "align": 1, "tcg": 1, "specif": [1, 3], "registri": 1, "trustedcomputinggroup": [1, 3], "org": [1, 3], "wp": [1, 3], "upload": [1, 3], "tcgalgorithmregistry_rev01": 1, "15": 1, "pdf": [1, 3], "alg_invalid": [1, 4], "4294967295": 1, "alg_sha1": [1, 4], "10": 1, "alg_sha256": [1, 4], "11": 1, "alg_sha384": [1, 4], "12": 1, "alg_sha512": [1, 4], "13": 1, "alg_sm3_256": [1, 4], "14": 1, "classmethod": [1, 2], "algo_dict": [1, 4], "method": [1, 2, 3], "construct": [1, 2], "algo": 1, "dict": 1, "properti": [1, 3], "algo_id": [1, 4], "id": [1, 3], "block_siz": [1, 4], "block": 1, "size": [1, 5, 10], "digest_s": [1, 4], "digest": [1, 4, 6, 9], "is_valid": [1, 4], "valid": [1, 2, 6, 8], "check": [1, 2, 6, 9], "cceventlogentri": [1, 4], "invalid_algorithms_id": [1, 4], "invalid_event_typ": [1, 4], "invalid_measure_register_index": [1, 4], "unknown_event_type_nam": [1, 4], "unknown": [1, 9], "alg_id": [1, 4, 6], "type": [1, 2, 3, 4, 8], "evt_siz": [1, 4, 6], "evt_typ": [1, 4, 6], "evt_type_str": [1, 4, 6], "string": [1, 2, 7, 8, 9], "reg_idx": [1, 4, 6], "regist": [1, 3, 6, 8], "index": [1, 6, 8, 10], "cceventlogtyp": [1, 4], "ev_act": [1, 4], "5": [1, 6, 7], "ev_compact_hash": [1, 4], "ev_cpu_microcod": [1, 4], "9": 1, "ev_efi_act": [1, 4], "2147483655": 1, "ev_efi_boot_services_appl": [1, 4], "2147483651": 1, "ev_efi_boot_services_driv": [1, 4], "2147483652": 1, "ev_efi_event_bas": [1, 4], "2147483648": 1, "ev_efi_gpt_ev": [1, 4], "2147483654": 1, "ev_efi_handoff_t": [1, 4], "2147483657": 1, "ev_efi_platform_firmware_blob": [1, 4], "2147483656": 1, "ev_efi_runtime_services_driv": [1, 4], "2147483653": 1, "ev_efi_variable_author": [1, 4], "2147483872": 1, "ev_efi_variable_boot": [1, 4], "2147483650": 1, "ev_efi_variable_driver_config": [1, 4], "2147483649": 1, "ev_event_tag": [1, 4], "6": 1, "ev_invalid": [1, 4], "ev_ipl": [1, 4], "ev_ipl_partition_data": [1, 4], "ev_nonhost_cod": [1, 4], "ev_nonhost_config": [1, 4], "16": 1, "ev_nonhost_info": [1, 4], "17": 1, "ev_no_act": [1, 4], "3": [1, 7, 8, 9], "ev_omit_boot_device_ev": [1, 4], "18": 1, "ev_platform_config_flag": [1, 4], "ev_post_cod": [1, 4], "ev_preboot_cert": [1, 4], "0": [1, 2, 5, 7, 8, 9, 10], "ev_separ": [1, 4], "4": [1, 3, 7, 8], "ev_s_crtm_cont": [1, 4], "7": 1, "ev_s_crtm_vers": [1, 4], "8": 1, "ev_table_of_devic": [1, 4], "ev_unknown_a": [1, 4], "2147483658": 1, "ev_unknown_b": [1, 4], "2147483659": 1, "ev_unknown_c": [1, 4], "2147483660": 1, "ev_unus": [1, 4], "2": [1, 2, 3, 6, 7, 8, 9], "event_log_dict": [1, 4], "log_typ": [1, 4], "log_type_str": [1, 4], "valu": [1, 2, 6, 7, 8], "get": [1, 2, 3, 4, 7, 8, 9], "eventlogtyp": [1, 2, 4], "type_tdx": [1, 4, 6], "type_tpm": [1, 4, 6], "event_log_type_dict": [1, 4], "typedict": [1, 2], "is_valid_typ": [1, 2, 4], "i": [1, 2, 3, 5, 6, 7, 8, 9, 10], "eventlogutil": [1, 4], "target": [1, 2, 6, 9], "unix": [1, 2, 3, 7, 8, 9], "run": [1, 2, 3, 6, 7, 8, 9], "ud": [1, 2, 3, 7, 8, 9], "sock": [1, 2, 3, 7, 8, 9], "common": [1, 2, 3, 6], "util": [1, 2, 8], "relat": [1, 2], "action": [1, 2], "cleanup_channel": [1, 2, 4], "close": 1, "channel": [1, 2, 3], "us": [1, 2, 3, 5, 6, 7, 8, 9, 10], "grpc": [1, 2, 3, 7, 8, 9], "get_container_eventlog": [1, 4, 6], "from": [1, 2, 6, 7, 8, 9], "contain": [1, 2, 5, 6, 7, 8, 9, 10], "perspect": [1, 2, 6], "get_eventlog": [1, 4], "list": 1, "function": [1, 2, 6, 7, 8, 9], "fetch": [1, 2, 6, 7, 8, 9], "return": [1, 2, 3, 6, 7, 8, 9], "arrai": [1, 3], "get_platform_eventlog": [1, 4, 6], "eventlog_typ": 1, "start_posit": [1, 7], "none": [1, 2, 3, 6], "count": [1, 7], "platform": [1, 2, 3, 4, 7, 8, 9], "current": [1, 2, 6], "support": [1, 2, 6, 7], "intel": [1, 2, 3, 5, 6, 8, 10], "tdx": [1, 2, 3, 5, 6, 7, 8, 9, 10], "paramet": [1, 2, 3], "get_raw_eventlog": [1, 4], "raw": 1, "request": [1, 2, 3, 4, 6, 7, 8], "geteventlogrequest": [1, 7], "data": [1, 2, 3, 6, 9], "stub": [1, 2, 3], "eventlogstub": 1, "call": [1, 2, 3], "server": [1, 2, 3, 9], "json": [1, 8], "parse_eventlog": [1, 4], "pars": [1, 3, 4, 6], "parse_saas_eventlog": [1, 4], "saa": [1, 7, 8], "level": [1, 7, 8], "setup_eventlog_request": [1, 4], "eventlog_level": [1, 7], "eventlog_categori": [1, 7], "gener": [1, 2, 3, 5, 7, 8, 9], "talk": 2, "measurementtyp": [2, 4], "type_tdx_rtmr": [2, 4, 6], "type_tee_report": [2, 4, 6], "type_tpm_pcr": [2, 4, 6], "eventlog": [2, 4], "measurement_type_dict": [2, 4], "measurementutil": [2, 4], "clean": 2, "up": 2, "get_container_measur": [2, 4, 6], "str": [2, 3], "get_measur": [2, 4], "getmeasurementrequest": [2, 8], "measurementstub": 2, "base64": [2, 3, 6, 8, 9], "encod": [2, 3, 8, 9], "get_platform_measur": [2, 4, 6], "measurement_typ": [2, 8], "report_data": [2, 3, 4, 8], "register_index": [2, 8], "tee": [2, 3, 5, 6, 8, 9, 10], "report": [2, 3, 6, 8], "rtmr": [2, 3, 4, 6, 7, 8], "setup_measurement_request": [2, 4], "measurement_categori": [2, 8], "confideti": 3, "which": [3, 5, 6, 7, 8, 10], "remot": [3, 9], "attest": [3, 5, 6, 9, 10], "part": [3, 6], "structur": 3, "trust": [3, 5, 6, 9, 10], "librari": [3, 6], "tcg_tpm2_r1p59_part2_structures_pub": 3, "architectur": 3, "domain": [3, 5, 6, 9, 10], "extens": [3, 5, 6, 10], "cdrdv2": 3, "v1": 3, "dl": 3, "getcont": 3, "733568": 3, "quote_typ": [3, 4, 6, 9], "an": [3, 6], "abstract": 3, "static": 3, "get_quot": [3, 4, 6], "extern": 3, "sdk": [3, 8, 9, 10], "interfac": [3, 6, 8], "subclass": 3, "need": [3, 6, 7, 8], "implement": [3, 5, 10], "inform": [3, 6], "_quot": [3, 4], "byte": 3, "_type": [3, 4], "nonc": [3, 6, 9], "user_data": [3, 6, 9], "expos": 3, "prevent": [3, 7], "replai": 3, "attack": 3, "user": [3, 4, 6, 9], "measur": [3, 4, 5, 7, 10], "file": [3, 6, 7, 8, 9], "int": 3, "quotecli": [3, 4], "client": [3, 6, 8, 9], "connect": 3, "do": [3, 6], "_server": [3, 4], "_channel": [3, 4], "thread": 3, "safe": 3, "_nonc": [3, 4], "_user_data": [3, 4], "_stub": [3, 4], "getquotestub": 3, "_request": [3, 4], "getquoterequest": [3, 9], "getquoterespons": [3, 9], "reuqest": 3, "detect": [3, 6], "make": [3, 5, 6, 7, 8, 9], "commun": [3, 6], "rais": 3, "runtimeerror": 3, "If": [3, 6], "doe": 3, "start": [3, 4, 7, 8, 9], "connectionrefusederror": 3, "fail": 3, "quotetdx": [3, 4], "sepecif": 3, "_version": [3, 4], "version": [3, 4, 5], "_tdreport": [3, 4], "_tee_typ": [3, 4], "ha": 3, "been": 3, "_tee_tcb_svn": [3, 4], "tcb": [3, 5, 10], "svn": 3, "_mrseam": [3, 4], "seam": 3, "sha384": 3, "hash": 3, "_mrsignerseam": [3, 4], "3rd": 3, "parti": [3, 6], "": [3, 6], "signer": 3, "_seamattribut": [3, 4], "attribut": [3, 6], "_tdattribut": [3, 4], "_xfam": [3, 4], "xfam": [3, 4], "_mrtd": [3, 4], "initi": 3, "_mrconfigid": [3, 4], "defin": [3, 7, 8], "non": 3, "owner": 3, "configur": [3, 6], "_mrowner": [3, 4], "guest": [3, 8], "_mrownerconfig": [3, 4], "_rtmr": [3, 4], "runtim": [3, 5, 7, 8, 9, 10], "extend": 3, "_reportdata": [3, 4], "addit": 3, "_signatur": [3, 4], "ecdsa": 3, "signatur": [3, 4], "r": 3, "compon": 3, "follow": [3, 6, 7, 8, 9], "x": 3, "32": 3, "_attestation_kei": [3, 4], "public": 3, "kei": [3, 4, 8], "enclav": 3, "_cert_data": [3, 4], "requir": [3, 6, 9], "certifi": 3, "sign": 3, "attestation_kei": [3, 4], "cert_data": [3, 4], "certif": 3, "mrconfigid": [3, 4], "mrowner": [3, 4], "mrownerconfig": [3, 4], "mrseam": [3, 4], "mrsignerseam": [3, 4], "mrtd": [3, 4], "struct": 3, "error": [3, 7], "unpack": 3, "reportdata": 3, "seam_attribut": [3, 4], "td_attribut": [3, 4], "tdreport": [3, 4, 6], "tee_typ": [3, 4], "quotetpm": [3, 4], "todo": 3, "introduct": [4, 10], "prerequisit": 4, "instal": 4, "packag": [4, 10], "concept": 4, "usag": [4, 7], "quot": [4, 5, 10], "exampl": 4, "end": 4, "troubleshoot": 4, "next": 4, "step": [4, 7, 8, 9], "contribut": 4, "feedback": 4, "submodul": 4, "quote_sdk": 4, "modul": [4, 6, 10], "content": [4, 5], "measurement_sdk": 4, "eventlog_sdk": 4, "build": [4, 6], "docker": 4, "imag": 4, "deploi": 4, "daemonset": 4, "kubernet": [4, 7, 8], "test": [4, 6], "sidecar": [4, 9], "applic": 4, "deploy": [4, 6, 9], "vm": [5, 10], "virtual": [5, 10], "machin": [5, 10], "like": [5, 10], "isol": [5, 10], "encrypt": [5, 10], "environ": [5, 6, 7, 8, 9, 10], "hardwar": [5, 10], "execut": [5, 6, 10], "technologi": [5, 10], "To": [5, 6, 7, 8, 10], "land": [5, 10], "lot": [5, 10], "differ": [5, 6, 7, 8, 9, 10], "paa": [5, 7, 8, 10], "framework": [5, 6, 10], "cluster": [5, 7, 8, 10], "bring": [5, 10], "challeng": [5, 10], "enabl": [5, 6, 10], "project": [5, 6, 10], "design": [5, 6, 10], "pattern": [5, 10], "It": [5, 6, 10], "also": [5, 6, 7, 8, 10], "new": [5, 10], "featur": [5, 6, 10], "address": [5, 10], "how": [5, 10], "auto": [5, 10], "scale": [5, 10], "trustworthi": [5, 6, 8, 10], "reduc": [5, 10], "etc": [5, 6, 10], "note": [5, 7, 8, 9, 10], "For": [5, 6, 10], "linux": [5, 10], "stack": [5, 10], "tool": [5, 7, 8, 9, 10], "_": 5, "correspond": [5, 10], "white": [5, 10], "paper": [5, 10], "whitepap": [5, 10], "www": 5, "u": [5, 6], "en": 5, "detail": [5, 6], "779108": 5, "html": 5, "pre": 5, "releas": [5, 9], "prototyp": 5, "mai": [5, 7, 8], "substanti": 5, "modifi": 5, "updat": 5, "made": 5, "avail": 5, "author": [5, 9], "assur": 5, "ever": 5, "develop": [5, 6], "product": 5, "readi": [5, 6, 7, 8], "ccnp": 6, "solut": 6, "simplifi": [6, 7, 8], "includ": [6, 7, 8], "servic": [6, 10], "hide": 6, "complex": 6, "scalabl": 6, "cover": 6, "result": 6, "collect": [6, 7, 8], "variou": 6, "amd": 6, "sev": 6, "snp": 6, "more": 6, "later": 6, "process": [6, 7, 8], "within": [6, 7, 8], "verifi": [6, 7, 8, 9], "binari": 6, "were": 6, "properli": 6, "instanti": 6, "third": 6, "can": [6, 7, 8, 9], "leverag": 6, "identifi": [6, 7], "well": 6, "order": 6, "decid": 6, "whether": 6, "thei": [6, 7], "shall": [6, 7, 8], "put": 6, "workload": 6, "onto": 6, "overal": 6, "both": [6, 7, 8], "custom": 6, "face": 6, "By": [6, 7], "easili": 6, "retriev": 6, "kind": [6, 8], "evid": 6, "work": [6, 7, 8], "along": [6, 7, 8], "verif": 6, "amber": 6, "polici": 6, "further": [6, 7], "decis": 6, "sourc": [6, 7, 8], "code": [6, 7, 8], "pypi": 6, "api": 6, "document": [6, 7, 8, 9], "In": [6, 7, 8], "have": [6, 7, 8], "backend": 6, "first": [6, 7, 8, 9], "pleas": [6, 7, 8, 9], "each": 6, "guid": [6, 7, 8], "resid": 6, "folder": [6, 7, 8], "pip": 6, "command": [6, 7, 8, 9], "e": 6, "There": 6, "three": 6, "major": 6, "could": 6, "automat": 6, "input": [6, 9], "them": 6, "option": [6, 7, 8, 9], "here": [6, 7, 8], "without": 6, "ani": [6, 7], "import": [6, 7, 8, 9], "print": 6, "secret": 6, "token_urlsaf": 6, "b64encod": 6, "b": 6, "should": [6, 9], "categori": [6, 7, 8], "basic": 6, "focu": 6, "pcr": [6, 8], "advanc": 6, "certain": [6, 7, 8], "still": [6, 7, 8], "progress": [6, 7, 8], "depend": 6, "all": [6, 7, 8], "vendor": [6, 8], "one": [6, 7, 8], "singl": 6, "its": [6, 7, 8], "th": 6, "rtmr_measur": 6, "container_measur": 6, "assist": 6, "two": 6, "number": [6, 7], "insid": [6, 7, 8], "default": [6, 7, 8, 9], "same": [6, 7], "set": [6, 7, 8], "show": [6, 7, 8], "total": 6, "length": 6, "len": 6, "second": [6, 7], "equal": [6, 8], "tba": 6, "found": [6, 7, 8, 9], "about": 6, "see": 6, "our": 6, "page": [6, 10], "welcom": 6, "suggest": 6, "most": 6, "you": [6, 7, 8, 9], "agre": 6, "contributor": 6, "licens": 6, "agreement": 6, "cla": 6, "declar": 6, "right": 6, "actual": [6, 7, 8], "grant": 6, "your": 6, "visit": 6, "site": 6, "when": 6, "submit": 6, "pull": 6, "bot": 6, "determin": [6, 8], "decor": 6, "pr": 6, "appropri": 6, "g": 6, "label": 6, "comment": 6, "simpli": 6, "instruct": 6, "onli": 6, "onc": 6, "across": 6, "repo": 6, "md": 6, "encount": 6, "bug": 6, "issu": [6, 7], "section": [6, 7, 8], "integr": [7, 9], "authent": 7, "cloud": [7, 8], "nativ": [7, 8], "underli": [7, 8, 9], "absolut": 7, "review": 7, "correctli": 7, "tdx_eventlog": 7, "tpm_eventlog": 7, "proto": [7, 8, 9], "buf": [7, 8], "enum": [7, 8, 9], "messag": [7, 8, 9], "int32": [7, 8], "geteventlogrepli": 7, "eventlog_data_loc": 7, "rpc": [7, 8, 9], "geteventlog": 7, "select": [7, 8], "send": [7, 8], "out": [7, 8], "find": [7, 8], "sampl": [7, 8], "locat": [7, 8], "store": 7, "under": [7, 8, 9], "either": [7, 8, 9], "scenario": [7, 8, 9], "we": [7, 8], "helm": [7, 8], "offici": [7, 8, 9], "howev": [7, 8], "yaml": [7, 8, 9], "manifest": [7, 8, 9], "dockerfil": [7, 8, 9], "directori": [7, 8, 9], "cd": [7, 8, 9], "t": [7, 8, 9], "ccnp_eventlog_serv": 7, "f": [7, 8, 9], "containerd": [7, 8, 9], "rememb": [7, 8], "save": [7, 8, 9], "o": [7, 8, 9], "tar": [7, 8, 9], "ctr": [7, 8, 9], "n": [7, 8, 9], "k8": [7, 8, 9], "io": [7, 8, 9], "nice": [7, 8], "serv": [7, 8, 9], "live": [7, 8], "node": [7, 8], "chart": [7, 8], "name": [7, 8], "namespac": [7, 8], "duplic": [7, 8], "case": [7, 8], "multipl": [7, 8], "namespacecr": [7, 8], "fals": [7, 8], "befor": [7, 8], "happen": [7, 8], "choos": [7, 8], "kubectl": [7, 8, 9], "creat": [7, 8], "sure": [7, 8], "mount": 7, "eventlogdir": 7, "variabl": 7, "so": 7, "accord": [7, 8, 9], "plai": [7, 8, 9], "host": [7, 8, 9], "below": [7, 8, 9], "grpcurl": [7, 8, 9], "plaintext": [7, 8, 9], "d": [7, 8, 9], "asset": 8, "world": 8, "monitor": 8, "oper": 8, "perform": 8, "tdx_rtmr": 8, "tee_report": 8, "getmeasurementrepli": 8, "getmeasur": 8, "devic": 8, "plugin": 8, "ccnp_measurement_serv": 8, "resourc": 8, "take": 8, "contact": 8, "capabl": 8, "respons": 8, "mandatori": 9, "ad": 9, "fresh": 9, "specifi": 9, "socket": 9, "And": 9, "buffer": 9, "bellow": 9, "healthcheckrequest": 9, "healthcheckrespons": 9, "servingstatu": 9, "not_serv": 9, "service_unknown": 9, "statu": 9, "getquot": 9, "don": 9, "forget": 9, "confirm": 9, "appli": 9, "quote_serv": 9, "dummi": 9, "mtizndu2nzgxmjm0nty3odeymzq1njc4mtizndu2nzgxmjm0nty3odeymzq1njc4": 9, "ixukobo1um3c1wopn4si": 9, "quoteserv": 9, "output": 9, "baacaieaaaaaaaaak5pym": 9, "ectkmucg2zlx8gb6p8pz1elknluyzlfq7gmq4aaaaabaagaaaaaaaaaaaaaaaaaej6azsdsiac7oqlkef1cpilhw5wjse1p2tlba": 9, "zbtdfaa2vna6vd0esckosejmcoqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaadnagyaaaaaaksgazrswhmm": 9, "suecehyvqcdjjlxqxq9pgnbeaihc4oqdukyebs8kvx1ngbetnf1faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao8sw2a5sigf6": 9, "mgszljcgpq4sp0tqpfktspzny2pwpoyijbt1ape1rpeqdtoa": 9, "nrew8yd5jj8ypktga": 9, "wfwph77": 9, "negdf9zwneonsxrtntslouabmeutz": 9, "xscbs5guwwaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaao": 9, "pqjmpmxxefojelnxupmabw69vjn9zqqqe3njvd72ql13c43jw093ytpa7ipksr7msielxhz9nmdtksucmgpmeaaa0doq0wnfzk1rm8lvmvecwopii5epjkq7kclggtibrcrbhe6p3ecy4suvhwet733trdtwhkh3jnckvtirgexe3sy1orixb7dvmrmvrwdmmfldjob8rvpn7ho": 9, "g788nogfoemd5f95mgdnvj3v0pppvgjq5ryby6soyhasl25dbkgaeyqaaagbhmva": 9, "8abaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaavaaaaaaaaaocaaaaaaaaaowsenyakj5shxhr5xwg93bulhjmq0t2vdgcq70i": 9, "c4qaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaanyeknxvli8xr040p": 9, "xd7qmpfbvj8bq932nayc4ovkjfaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaoyzirlhswsqevyilvccagcdb": 9, "k5py0hoxqaem1vn5p": 9, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacxrf4": 9, "4cgy": 9, "iydlv5k30df9ymxwa6zyhbz8qproghntzptiexsijlkzgex9oafrepqwcu": 9, "wbggzjvlqv9hg6a5iaaaaqidbaugbwgjcgsmdq4pebesexqvfhcygrobhb0ehwuaxg4aac0tls0tqkvhsu4gq0vsvelgsunbveutls0tlqpnsulfoerdq0jkywdbd0lcqwdjvwr2clzdnnpjtfrvbgi0zet5rghsbflauec1rxddz1ljs29asxpqmevbd0l3cmnerwlnq0fhqtfvruf3d1ptvzuwwld3z1uwzfljrkjeu3lcuwjhrjbabtl5ylncrffurwfnqmdhqtfvrunnd1iku1c1mfpxd2drmjl5y0c5evlyunbimjr4rkrbu0jntlzcqwnnqzfoagjuumhjru5zwvhkae1rc3dduvlevlfrsqpequpeuvrfte1ba0dbmvvfqmhnq1zwtxdiagnotwpnd05urtjnrgd5txpjd1doy05nekf3tlrfmk1ez3lnekl3cldqqndnu0l3sufzrfzruureqmxkym5sbgjdqlrsmwdnvuvotelftmxjbljwwm1sallyumxnum93r0fzrfzruuskrejgsmjuumxiq0jeyjnkd2izsmhkr2x2ympfvu1csudbmvvfqnd3tfuyrnvkr0vnutj4agntrxhdekfkqmdovgpcqwdnqwtoqk1rc3dduvlevlfrr0v3slzvekjatujnr0j5cudtttq5qwdfr0ndcudtttq5qxdfseewsufcuhzqclntkzjtu1r2tze0rkhpoxd3k05qyuhzazhyvhfqq0xemdz3mmtjve9yb0rysmn5ndbmbhrzemfbz3jxr2fswfokty9gy3cxc0paddzzdfnrvhlyu2pnz01ntuljreneqwzcz05wsfnnrudeqvdnqlnwyjeztnzsdmg2vujkewrumapnodrcvnd2zvzeqnjcz05wsfi4rvpeqmlnr0nnwhfcy2hscg9ksfj3y3pvdkwyrndhuzuwy25wemrhvmtjmlz5cmrtbgpawe11yvc1mfpxd3vzmjl0tdnobmvdowpaweowyvdacfkyrjbhvzl1tdnzmewzqmphmk55ykq5allumxckykdgmfptoxliu1psym1odlphbhvaejfrwlhjd0hrwurwujbpqkjzruzeugs4eit4l0jtvkw5udvjtkranlhluwptohr4tue0r0exvwred0vcl3drruf3sud3refnqmdovkhstujbzjhfqwpbqu1jsunpuvlks29aswh2ae5butbcckjjsunlakndqwlzd0hnwutlb1pjahzotkfrmejbuvfrugyyuxdcnhrtyzhyrmxvzgjjqzlcvendqvdnr0npcucku0linfrrru5buul3z2dgve1cquddexfhu0linfrrru5buulcqwdfrk1cquddexfhu0linfrrru5buuldqwdfrgpnqkfhq3lxr1njyjruuuvoqvfjrefnrunnqkfhq3lxr1njyjruuuvoqvfjrufnrunnqkfhq3lxr1njyjruuuvockfrsuzbz0vetujbr0n5cudtswi0vffftkfrsudbz0vctujbr0n5cudtswi0vffftkfrsuhbz0vbtujbr0n5cucku0linfrrru5buuljqwdfre1cquddexfhu0linfrrru5buulkqwdfqu1cquddexfhu0linfrrru5buullqwdfqqpnqkfhq3lxr1njyjruuuvoqvfjtefnrufnqkfhq3lxr1njyjruuuvoqvfjtufnrufnqkfhq3lxr1njyjruuuvockfrsu5bz0vbtujbr0n5cudtswi0vffftkfrsu9bz0vbtujbr0n5cudtswi0vffftkfrsvbbz0vbtujbr0n5cucku0linfrrru5buulrqwdfqu1cquddexfhu0linfrrru5buulsqwdfte1coeddexfhu0linfrrru5buultqkjbrgpcuuldqxdfquf3qufbqufbqufbqu1cquddaxfhu0linfrrru5buu1fqwdbqu1cuuddaxfhu0linfrrru5buvffckjnq0fid1vbqurbuejnb3foa2lhk0uwqkrrruzdz0vctui0r0npcudtswi0vffftkfrwuvfquxfbzjlddd4d3qknmhqzgdzekrnmfl3ukfzs0tvwklodmhoqvewqkj6qtjnqkfhq3lxr1njyjruuuvoqvfjqkfrsc9nqkfhq3lxrwptswi0vffftkfry0nbuuvbtujbr0n5cudtswi0vffftkfry0rbuugvtufvr0ndcudtttq5qkfnq0ewz0fnrvvdcklbturnudnsaujoyvpum2nlujducfvxndfktm1hnzizzlfycwljvtu0u09kqwlfqssrzw9ta1zoa2nnberlznckadndbgx6uznway9hsghynjzdujc1tlljanpnpqotls0tluvorcbdrvjusuzjq0furs0tls0tci0tls0tqkvhsu4gq0vsvelgsunbveutls0tlqpnsuldbgpdq0fqmmdbd0lcqwdjvkfkvnzyyzi5ryticfffbkoxuff6emdgwem5nvvnqw9hq0nxr1nnndlcqu1dck1hz3hhakfzqmdovkjbtu1fvwx1zedwc0lgtkhxq0jtyji5melftkjnum93r0fzrfzruuteqkzkym5sbgjdqkqkyjnkd2izsmhkr2x2ympfvu1csudbmvvfqnd3tfuyrnvkr0vnutj4agntrxhdekfkqmdovkjbz01ba05ctvfzdwpduvlevlfrr0v3slzvekflrncwee9eqtfnakv4turvd01uqmfgdzb6txpbmu1qrxhnrfv3tvrcyu1iqxhjakfnckjntlzcqu1nr1vsdwrhvnnjrk5iv0ncuvewc2dvr3hozedadmntmgdrmev4r2pbwujntlzcqw9nrvvsdwrhvnmksuvodmnuqnzjbuywyvc5du1suxdfz1levlfrserbdfrzvzuwwvncrgjhrnlzvevmtufrr0exvuvdqxddutbfeapdekfkqmdovkjbwvrbbfzutuzrd0v3wuhlb1pjemowq0frwullb1pjemowrefry0rrz0fftlnclzd0mjfswfnpcjjddxpwehc3ngvkqjcyrxler2dxnxjyq3r4mnrwvexxnmhlazz6k1vpulpdbnfsn3bzt3zncuzlu3hsbvrssmwkzvrtatjxwxozcu9cdxpdqnveqwzcz05wsfnnrudeqvdnqlfpwlf6v1dwmdbpzk9edepwu3yxqwjpu2nhckrcuwpcz05wsfi4rvn6qkpnrwvnumfcrghrrm9ksfj3y3pvdkwytmxjbljwwm1sallyumxjetuwy25wemrhvmtjmlz5cmrtbgpawe11yvc1mfpxd3vzmjl0tdbsdwrhvnnvmgrzvw05dmrftkjmbvjsy2pbzejntlziutrfrmdrvwxxowqkemiwyjrlbefty25vourqt0fwy0wzbff3rgdzrfzsmfbbuugvqkfrrefnrudnqklhqtfvzev3ruivd1fjtufzqgpbzjhdqvfbd0nnwullb1pjemowruf3sursd0f3ukfjz1hzvmtpmhcratzwwudxm1vglziydwfyztbzskrqmvvlcm5bk1rqrdfhatvjq0ldwwixu0ftrdv4a2zuvnb2bzrvb3lpu1l4ckrxtg1vujrdstlos3lmue4rci0tls0tru5eienfulrjrkldqvrfls0tls0kls0tls1crudjtibdrvjusuzjq0furs0tls0tck1jsunqekndqwptz0f3sujbz0lvsw1vttfscwrosw56zzdtvlvyovfhemtuqnf3d0nnwullb1pjemowruf3sxckyurfyu1cz0dbmvvfqxd3ulnxntbav3dnvtbkwulgsnzim1fnutbfeedqqvlcz05wqkfvtuvvbhvkr1zzsuvodgpjbkj2y21gmgfxoxvnulf3rwdzrfzruuheqxruwvc1mfltqkrir0z5wvrfte1ba0dbmvvfq0f3q1ewrxhdekfkckjntlzcqvluqwxwve1cnfheveu0turveu1urxdorfv4tuzvweruutvnvel6tvrjek5uazfpvm93yurfyu1cz0ckqtfvruf3d1jtvzuwwld3z1uwzfljrkp2yjnrz1ewrxhhakfzqmdovkjbb01fvwx1zedwc0lftnzjbkj2y21gmaphvzl1tvjrd0vnwurwuvfiref0vflxntbzu0jeykdgevluruxnqwthqtfvrunbd0nrmev4q3pbskjntlzcqvluckfsvlrnrmt3rxdzsetvwkl6ajbdqvfzsutvwkl6ajbeqvfjrffnquvdnm5fd01esvlat2ovavbxc0n6yuvlatckmu9pt1nmukzov0dqym5cvkpmvm5rwtr1m0lqa0rzwuwwtxhpng1xc3lzamxcywxuvll4rlayc0pcszv6betpqgp1ekncdurbzkjntlziu01fr0rbv2dcuwlauxpxv3awmglmt0r0slztdjfbyk9ty0dyrejtqmdovkhsoevtekjkck1fzwdsyujeagtgb2riundjem92tdjobgnuunbabwxqwvhsbgn5ntbjblz6zedwa2myvnlkbwxqwlhndwfxntakwld3dvkyoxrmmgx1zedwc1uwzflvbtl2zevoqkxtumxjakfkqmdovkhrnevgz1fvsw1vttfscwrosw56zzdtvgpvcjlrr3prbkjxd3dez1levliwuefrsc9cqvfeqwdfr01csudbmvvkrxdfqi93uulnqvlcqwy4q0frrxddz1ljcktvwkl6ajbfqxdjrfnrqxdsz0loqu9xlzvra1iruzldavney05vb3dmdvbsthnxr2yvwwk3r1nyotrcz3dud2ckqwlfqtrkmgxysg9ncytybzvvl3nynk85uvd4sfjbdlpvr09kule3y3zxulhhcuk9ci0tls0tru5eienfulrjrkldqvrfls0tls0kaa": 9, "quotetyp": 9, "search": 10}, "objects": {"ccnp": [[1, 0, 0, "-", "eventlog"], [2, 0, 0, "-", "measurement"], [3, 0, 0, "-", "quote"]], "ccnp.eventlog": [[1, 0, 0, "-", "eventlog_sdk"]], "ccnp.eventlog.eventlog_sdk": [[1, 1, 1, "", "CCAlgorithms"], [1, 1, 1, "", "CCEventLogEntry"], [1, 1, 1, "", "CCEventLogType"], [1, 1, 1, "", "EventlogType"], [1, 1, 1, "", "EventlogUtility"]], "ccnp.eventlog.eventlog_sdk.CCAlgorithms": [[1, 2, 1, "", "ALG_INVALID"], [1, 2, 1, "", "ALG_SHA1"], [1, 2, 1, "", "ALG_SHA256"], [1, 2, 1, "", "ALG_SHA384"], [1, 2, 1, "", "ALG_SHA512"], [1, 2, 1, "", "ALG_SM3_256"], [1, 3, 1, "", "algo_dict"], [1, 4, 1, "", "algo_id"], [1, 4, 1, "", "block_size"], [1, 4, 1, "", "digest_size"], [1, 4, 1, "", "is_valid"]], "ccnp.eventlog.eventlog_sdk.CCEventLogEntry": [[1, 2, 1, "", "INVALID_ALGORITHMS_ID"], [1, 2, 1, "", "INVALID_EVENT_TYPE"], [1, 2, 1, "", "INVALID_MEASURE_REGISTER_INDEX"], [1, 2, 1, "", "UNKNOWN_EVENT_TYPE_NAME"], [1, 4, 1, "", "alg_id"], [1, 4, 1, "", "digest"], [1, 4, 1, "", "event"], [1, 4, 1, "", "evt_size"], [1, 4, 1, "", "evt_type"], [1, 4, 1, "", "evt_type_str"], [1, 4, 1, "", "reg_idx"]], "ccnp.eventlog.eventlog_sdk.CCEventLogType": [[1, 2, 1, "", "EV_ACTION"], [1, 2, 1, "", "EV_COMPACT_HASH"], [1, 2, 1, "", "EV_CPU_MICROCODE"], [1, 2, 1, "", "EV_EFI_ACTION"], [1, 2, 1, "", "EV_EFI_BOOT_SERVICES_APPLICATION"], [1, 2, 1, "", "EV_EFI_BOOT_SERVICES_DRIVER"], [1, 2, 1, "", "EV_EFI_EVENT_BASE"], [1, 2, 1, "", "EV_EFI_GPT_EVENT"], [1, 2, 1, "", "EV_EFI_HANDOFF_TABLES"], [1, 2, 1, "", "EV_EFI_PLATFORM_FIRMWARE_BLOB"], [1, 2, 1, "", "EV_EFI_RUNTIME_SERVICES_DRIVER"], [1, 2, 1, "", "EV_EFI_VARIABLE_AUTHORITY"], [1, 2, 1, "", "EV_EFI_VARIABLE_BOOT"], [1, 2, 1, "", "EV_EFI_VARIABLE_DRIVER_CONFIG"], [1, 2, 1, "", "EV_EVENT_TAG"], [1, 2, 1, "", "EV_INVALID"], [1, 2, 1, "", "EV_IPL"], [1, 2, 1, "", "EV_IPL_PARTITION_DATA"], [1, 2, 1, "", "EV_NONHOST_CODE"], [1, 2, 1, "", "EV_NONHOST_CONFIG"], [1, 2, 1, "", "EV_NONHOST_INFO"], [1, 2, 1, "", "EV_NO_ACTION"], [1, 2, 1, "", "EV_OMIT_BOOT_DEVICE_EVENTS"], [1, 2, 1, "", "EV_PLATFORM_CONFIG_FLAGS"], [1, 2, 1, "", "EV_POST_CODE"], [1, 2, 1, "", "EV_PREBOOT_CERT"], [1, 2, 1, "", "EV_SEPARATOR"], [1, 2, 1, "", "EV_S_CRTM_CONTENTS"], [1, 2, 1, "", "EV_S_CRTM_VERSION"], [1, 2, 1, "", "EV_TABLE_OF_DEVICES"], [1, 2, 1, "", "EV_UNKNOWN_A"], [1, 2, 1, "", "EV_UNKNOWN_B"], [1, 2, 1, "", "EV_UNKNOWN_C"], [1, 2, 1, "", "EV_UNUSED"], [1, 3, 1, "", "event_log_dict"], [1, 4, 1, "", "log_type"], [1, 3, 1, "", "log_type_string"]], "ccnp.eventlog.eventlog_sdk.EventlogType": [[1, 2, 1, "", "TYPE_TDX"], [1, 2, 1, "", "TYPE_TPM"], [1, 3, 1, "", "event_log_type_dict"], [1, 3, 1, "", "is_valid_type"]], "ccnp.eventlog.eventlog_sdk.EventlogUtility": [[1, 3, 1, "", "cleanup_channel"], [1, 3, 1, "", "get_container_eventlog"], [1, 3, 1, "", "get_eventlog"], [1, 3, 1, "", "get_platform_eventlog"], [1, 3, 1, "", "get_raw_eventlogs"], [1, 3, 1, "", "parse_eventlogs"], [1, 3, 1, "", "parse_saas_eventlogs"], [1, 3, 1, "", "setup_eventlog_request"]], "ccnp.measurement": [[2, 0, 0, "-", "measurement_sdk"]], "ccnp.measurement.measurement_sdk": [[2, 1, 1, "", "MeasurementType"], [2, 1, 1, "", "MeasurementUtility"]], "ccnp.measurement.measurement_sdk.MeasurementType": [[2, 2, 1, "", "TYPE_TDX_RTMR"], [2, 2, 1, "", "TYPE_TEE_REPORT"], [2, 2, 1, "", "TYPE_TPM_PCR"], [2, 3, 1, "", "is_valid_type"], [2, 3, 1, "", "measurement_type_dict"]], "ccnp.measurement.measurement_sdk.MeasurementUtility": [[2, 3, 1, "", "cleanup_channel"], [2, 3, 1, "", "get_container_measurement"], [2, 3, 1, "", "get_measurement"], [2, 3, 1, "", "get_platform_measurement"], [2, 3, 1, "", "setup_measurement_request"]], "ccnp.quote": [[3, 0, 0, "-", "quote_sdk"]], "ccnp.quote.quote_sdk": [[3, 1, 1, "", "Quote"], [3, 1, 1, "", "QuoteClient"], [3, 1, 1, "", "QuoteTDX"], [3, 1, 1, "", "QuoteTPM"]], "ccnp.quote.quote_sdk.Quote": [[3, 2, 1, "", "_quote"], [3, 2, 1, "", "_type"], [3, 3, 1, "", "get_quote"], [3, 4, 1, "", "quote"], [3, 4, 1, "", "quote_type"]], "ccnp.quote.quote_sdk.QuoteClient": [[3, 2, 1, "", "_channel"], [3, 2, 1, "", "_nonce"], [3, 2, 1, "", "_request"], [3, 2, 1, "", "_server"], [3, 2, 1, "", "_stub"], [3, 2, 1, "", "_user_data"], [3, 3, 1, "", "request"]], "ccnp.quote.quote_sdk.QuoteTDX": [[3, 2, 1, "", "_attestation_key"], [3, 2, 1, "", "_cert_data"], [3, 2, 1, "", "_mrconfigid"], [3, 2, 1, "", "_mrowner"], [3, 2, 1, "", "_mrownerconfig"], [3, 2, 1, "", "_mrseam"], [3, 2, 1, "", "_mrsignerseam"], [3, 2, 1, "", "_mrtd"], [3, 2, 1, "", "_reportdata"], [3, 2, 1, "", "_rtmr"], [3, 2, 1, "", "_seamattributes"], [3, 2, 1, "", "_signature"], [3, 2, 1, "", "_tdattributes"], [3, 2, 1, "", "_tdreport"], [3, 2, 1, "", "_tee_tcb_svn"], [3, 2, 1, "", "_tee_type"], [3, 2, 1, "", "_version"], [3, 2, 1, "", "_xfam"], [3, 4, 1, "", "attestation_key"], [3, 4, 1, "", "cert_data"], [3, 4, 1, "", "mrconfigid"], [3, 4, 1, "", "mrowner"], [3, 4, 1, "", "mrownerconfig"], [3, 4, 1, "", "mrseam"], [3, 4, 1, "", "mrsignerseam"], [3, 4, 1, "", "mrtd"], [3, 3, 1, "", "parse"], [3, 4, 1, "", "report_data"], [3, 4, 1, "", "rtmrs"], [3, 4, 1, "", "seam_attributes"], [3, 4, 1, "", "signature"], [3, 4, 1, "", "td_attributes"], [3, 4, 1, "", "tdreport"], [3, 4, 1, "", "tee_type"], [3, 4, 1, "", "version"], [3, 4, 1, "", "xfam"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"ccnp": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "packag": [0, 1, 2, 3, 6], "eventlog": [1, 6, 7], "submodul": [1, 2, 3], "eventlog_sdk": 1, "modul": [1, 2, 3], "content": [1, 2, 3, 10], "measur": [2, 6, 8], "measurement_sdk": 2, "quot": [3, 6, 9], "quote_sdk": 3, "confidenti": [4, 5, 6, 10], "cloud": [4, 5, 6, 10], "nativ": [4, 5, 6, 10], "primit": [4, 5, 6, 10], "sdk": [4, 6], "servic": [4, 7, 8, 9], "python": 6, "get": 6, "start": 6, "prerequisit": [6, 7, 8], "instal": [6, 7, 8, 9], "kei": 6, "concept": 6, "usag": 6, "type": 6, "platform": 6, "exampl": 6, "measurementtyp": 6, "event": 6, "log": 6, "eventlogtyp": 6, "end": 6, "troubleshoot": 6, "next": 6, "step": 6, "contribut": 6, "provid": 6, "feedback": 6, "server": [7, 8], "introduct": [7, 8, 9], "build": [7, 8, 9], "docker": [7, 8, 9], "imag": [7, 8, 9], "deploi": [7, 8, 9], "daemonset": [7, 8, 9], "sidecar": [7, 8], "user": [7, 8], "applic": [7, 8], "deploy": [7, 8], "test": [7, 8, 9], "kubernet": 9, "welcom": 10, "": 10, "document": 10, "indic": 10, "tabl": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"ccnp package": [[0, "ccnp-package"]], "ccnp.eventlog package": [[1, "ccnp-eventlog-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "ccnp.eventlog.eventlog_sdk module": [[1, "module-ccnp.eventlog.eventlog_sdk"]], "Module contents": [[1, "module-ccnp.eventlog"], [2, "module-ccnp.measurement"], [3, "module-ccnp.quote"]], "ccnp.measurement package": [[2, "ccnp-measurement-package"]], "ccnp.measurement.measurement_sdk module": [[2, "module-ccnp.measurement.measurement_sdk"]], "ccnp.quote package": [[3, "ccnp-quote-package"]], "ccnp.quote.quote_sdk module": [[3, "module-ccnp.quote.quote_sdk"]], "Confidential Cloud-Native Primitives SDK for Python": [[6, "confidential-cloud-native-primitives-sdk-for-python"]], "Getting started": [[6, "getting-started"]], "Prerequisites": [[6, "prerequisites"]], "Install the package": [[6, "install-the-package"]], "Key concepts and usage": [[6, "key-concepts-and-usage"]], "Quote": [[6, "quote"]], "Quote type for platform": [[6, "quote-type-for-platform"]], "Example usage of quote SDK": [[6, "example-usage-of-quote-sdk"]], "Measurement": [[6, "measurement"]], "MeasurementType for platform": [[6, "measurementtype-for-platform"]], "Example usage of measurement SDK": [[6, "example-usage-of-measurement-sdk"]], "Event log": [[6, "event-log"]], "EventlogType for platform": [[6, "eventlogtype-for-platform"]], "Example usage of Eventlog SDK": [[6, "example-usage-of-eventlog-sdk"]], "End-to-end examples": [[6, "end-to-end-examples"]], "Troubleshooting": [[6, "troubleshooting"]], "Next steps": [[6, "next-steps"]], "Contributing": [[6, "contributing"]], "Provide Feedback": [[6, "provide-feedback"]], "Service: CCNP Eventlog Server": [[7, "service-ccnp-eventlog-server"]], "Introduction": [[7, "introduction"], [8, "introduction"], [9, "introduction"]], "Installation": [[7, "installation"], [8, "installation"], [9, "installation"]], "Prerequisite": [[7, "prerequisite"], [8, "prerequisite"]], "Build docker image": [[7, "build-docker-image"], [8, "build-docker-image"], [9, "build-docker-image"]], "Deploy as DaemonSet": [[7, "deploy-as-daemonset"], [8, "deploy-as-daemonset"]], "Deploy as Sidecar": [[7, "deploy-as-sidecar"], [8, "deploy-as-sidecar"]], "User application deployment": [[7, "user-application-deployment"], [8, "user-application-deployment"]], "Testing": [[7, "testing"], [8, "testing"], [9, "testing"]], "Service: CCNP Measurement Server": [[8, "service-ccnp-measurement-server"]], "Service: CCNP Quote Service": [[9, "service-ccnp-quote-service"]], "Deploy as DaemonSet in Kubernetes": [[9, "deploy-as-daemonset-in-kubernetes"]], "Confidential Cloud-Native Primitives (CCNP)": [[4, "confidential-cloud-native-primitives-ccnp"]], "CCNP SDK": [[4, "ccnp-sdk"]], "CCNP Services": [[4, "ccnp-services"]], "Confidential Cloud Native Primitives (CCNP)": [[5, "confidential-cloud-native-primitives-ccnp"]], "Welcome to Confidential Cloud-Native Primitives (CCNP)\u2019s documentation!": [[10, "welcome-to-confidential-cloud-native-primitives-ccnp-s-documentation"]], "Contents:": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]]}, "indexentries": {"alg_invalid (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_INVALID"]], "alg_sha1 (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_SHA1"]], "alg_sha256 (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_SHA256"]], "alg_sha384 (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_SHA384"]], "alg_sha512 (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_SHA512"]], "alg_sm3_256 (ccnp.eventlog.eventlog_sdk.ccalgorithms attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.ALG_SM3_256"]], "ccalgorithms (class in ccnp.eventlog.eventlog_sdk)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms"]], "cceventlogentry (class in ccnp.eventlog.eventlog_sdk)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry"]], "cceventlogtype (class in ccnp.eventlog.eventlog_sdk)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType"]], "ev_action (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_ACTION"]], "ev_compact_hash (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_COMPACT_HASH"]], "ev_cpu_microcode (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_CPU_MICROCODE"]], "ev_efi_action (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_ACTION"]], "ev_efi_boot_services_application (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_BOOT_SERVICES_APPLICATION"]], "ev_efi_boot_services_driver (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_BOOT_SERVICES_DRIVER"]], "ev_efi_event_base (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_EVENT_BASE"]], "ev_efi_gpt_event (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_GPT_EVENT"]], "ev_efi_handoff_tables (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_HANDOFF_TABLES"]], "ev_efi_platform_firmware_blob (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_PLATFORM_FIRMWARE_BLOB"]], "ev_efi_runtime_services_driver (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_RUNTIME_SERVICES_DRIVER"]], "ev_efi_variable_authority (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_VARIABLE_AUTHORITY"]], "ev_efi_variable_boot (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_VARIABLE_BOOT"]], "ev_efi_variable_driver_config (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EFI_VARIABLE_DRIVER_CONFIG"]], "ev_event_tag (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_EVENT_TAG"]], "ev_invalid (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_INVALID"]], "ev_ipl (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_IPL"]], "ev_ipl_partition_data (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_IPL_PARTITION_DATA"]], "ev_nonhost_code (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_NONHOST_CODE"]], "ev_nonhost_config (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_NONHOST_CONFIG"]], "ev_nonhost_info (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_NONHOST_INFO"]], "ev_no_action (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_NO_ACTION"]], "ev_omit_boot_device_events (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_OMIT_BOOT_DEVICE_EVENTS"]], "ev_platform_config_flags (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_PLATFORM_CONFIG_FLAGS"]], "ev_post_code (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_POST_CODE"]], "ev_preboot_cert (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_PREBOOT_CERT"]], "ev_separator (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_SEPARATOR"]], "ev_s_crtm_contents (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_S_CRTM_CONTENTS"]], "ev_s_crtm_version (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_S_CRTM_VERSION"]], "ev_table_of_devices (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_TABLE_OF_DEVICES"]], "ev_unknown_a (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_UNKNOWN_A"]], "ev_unknown_b (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_UNKNOWN_B"]], "ev_unknown_c (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_UNKNOWN_C"]], "ev_unused (ccnp.eventlog.eventlog_sdk.cceventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.EV_UNUSED"]], "eventlogtype (class in ccnp.eventlog.eventlog_sdk)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogType"]], "eventlogutility (class in ccnp.eventlog.eventlog_sdk)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility"]], "invalid_algorithms_id (ccnp.eventlog.eventlog_sdk.cceventlogentry attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.INVALID_ALGORITHMS_ID"]], "invalid_event_type (ccnp.eventlog.eventlog_sdk.cceventlogentry attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.INVALID_EVENT_TYPE"]], "invalid_measure_register_index (ccnp.eventlog.eventlog_sdk.cceventlogentry attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.INVALID_MEASURE_REGISTER_INDEX"]], "type_tdx (ccnp.eventlog.eventlog_sdk.eventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogType.TYPE_TDX"]], "type_tpm (ccnp.eventlog.eventlog_sdk.eventlogtype attribute)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogType.TYPE_TPM"]], "unknown_event_type_name (ccnp.eventlog.eventlog_sdk.cceventlogentry attribute)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.UNKNOWN_EVENT_TYPE_NAME"]], "alg_id (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.alg_id"]], "algo_dict() (ccnp.eventlog.eventlog_sdk.ccalgorithms class method)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.algo_dict"]], "algo_id (ccnp.eventlog.eventlog_sdk.ccalgorithms property)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.algo_id"]], "block_size (ccnp.eventlog.eventlog_sdk.ccalgorithms property)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.block_size"]], "ccnp.eventlog": [[1, "module-ccnp.eventlog"]], "ccnp.eventlog.eventlog_sdk": [[1, "module-ccnp.eventlog.eventlog_sdk"]], "cleanup_channel() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.cleanup_channel"]], "digest (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.digest"]], "digest_size (ccnp.eventlog.eventlog_sdk.ccalgorithms property)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.digest_size"]], "event (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.event"]], "event_log_dict() (ccnp.eventlog.eventlog_sdk.cceventlogtype class method)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.event_log_dict"]], "event_log_type_dict() (ccnp.eventlog.eventlog_sdk.eventlogtype class method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogType.event_log_type_dict"]], "evt_size (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.evt_size"]], "evt_type (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.evt_type"]], "evt_type_str (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.evt_type_str"]], "get_container_eventlog() (ccnp.eventlog.eventlog_sdk.eventlogutility class method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.get_container_eventlog"]], "get_eventlog() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.get_eventlog"]], "get_platform_eventlog() (ccnp.eventlog.eventlog_sdk.eventlogutility class method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.get_platform_eventlog"]], "get_raw_eventlogs() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.get_raw_eventlogs"]], "is_valid (ccnp.eventlog.eventlog_sdk.ccalgorithms property)": [[1, "ccnp.eventlog.eventlog_sdk.CCAlgorithms.is_valid"]], "is_valid_type() (ccnp.eventlog.eventlog_sdk.eventlogtype class method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogType.is_valid_type"]], "log_type (ccnp.eventlog.eventlog_sdk.cceventlogtype property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.log_type"]], "log_type_string() (ccnp.eventlog.eventlog_sdk.cceventlogtype class method)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogType.log_type_string"]], "module": [[1, "module-ccnp.eventlog"], [1, "module-ccnp.eventlog.eventlog_sdk"], [2, "module-ccnp.measurement"], [2, "module-ccnp.measurement.measurement_sdk"], [3, "module-ccnp.quote"], [3, "module-ccnp.quote.quote_sdk"]], "parse_eventlogs() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.parse_eventlogs"]], "parse_saas_eventlogs() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.parse_saas_eventlogs"]], "reg_idx (ccnp.eventlog.eventlog_sdk.cceventlogentry property)": [[1, "ccnp.eventlog.eventlog_sdk.CCEventLogEntry.reg_idx"]], "setup_eventlog_request() (ccnp.eventlog.eventlog_sdk.eventlogutility method)": [[1, "ccnp.eventlog.eventlog_sdk.EventlogUtility.setup_eventlog_request"]], "measurementtype (class in ccnp.measurement.measurement_sdk)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType"]], "measurementutility (class in ccnp.measurement.measurement_sdk)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility"]], "type_tdx_rtmr (ccnp.measurement.measurement_sdk.measurementtype attribute)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType.TYPE_TDX_RTMR"]], "type_tee_report (ccnp.measurement.measurement_sdk.measurementtype attribute)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType.TYPE_TEE_REPORT"]], "type_tpm_pcr (ccnp.measurement.measurement_sdk.measurementtype attribute)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType.TYPE_TPM_PCR"]], "ccnp.measurement": [[2, "module-ccnp.measurement"]], "ccnp.measurement.measurement_sdk": [[2, "module-ccnp.measurement.measurement_sdk"]], "cleanup_channel() (ccnp.measurement.measurement_sdk.measurementutility method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility.cleanup_channel"]], "get_container_measurement() (ccnp.measurement.measurement_sdk.measurementutility class method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility.get_container_measurement"]], "get_measurement() (ccnp.measurement.measurement_sdk.measurementutility method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility.get_measurement"]], "get_platform_measurement() (ccnp.measurement.measurement_sdk.measurementutility class method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility.get_platform_measurement"]], "is_valid_type() (ccnp.measurement.measurement_sdk.measurementtype class method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType.is_valid_type"]], "measurement_type_dict() (ccnp.measurement.measurement_sdk.measurementtype class method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementType.measurement_type_dict"]], "setup_measurement_request() (ccnp.measurement.measurement_sdk.measurementutility method)": [[2, "ccnp.measurement.measurement_sdk.MeasurementUtility.setup_measurement_request"]], "quote (class in ccnp.quote.quote_sdk)": [[3, "ccnp.quote.quote_sdk.Quote"]], "quoteclient (class in ccnp.quote.quote_sdk)": [[3, "ccnp.quote.quote_sdk.QuoteClient"]], "quotetdx (class in ccnp.quote.quote_sdk)": [[3, "ccnp.quote.quote_sdk.QuoteTDX"]], "quotetpm (class in ccnp.quote.quote_sdk)": [[3, "ccnp.quote.quote_sdk.QuoteTPM"]], "_attestation_key (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._attestation_key"]], "_cert_data (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._cert_data"]], "_channel (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._channel"]], "_mrconfigid (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrconfigid"]], "_mrowner (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrowner"]], "_mrownerconfig (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrownerconfig"]], "_mrseam (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrseam"]], "_mrsignerseam (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrsignerseam"]], "_mrtd (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._mrtd"]], "_nonce (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._nonce"]], "_quote (ccnp.quote.quote_sdk.quote attribute)": [[3, "ccnp.quote.quote_sdk.Quote._quote"]], "_reportdata (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._reportdata"]], "_request (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._request"]], "_rtmr (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._rtmr"]], "_seamattributes (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._seamattributes"]], "_server (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._server"]], "_signature (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._signature"]], "_stub (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._stub"]], "_tdattributes (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._tdattributes"]], "_tdreport (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._tdreport"]], "_tee_tcb_svn (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._tee_tcb_svn"]], "_tee_type (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._tee_type"]], "_type (ccnp.quote.quote_sdk.quote attribute)": [[3, "ccnp.quote.quote_sdk.Quote._type"]], "_user_data (ccnp.quote.quote_sdk.quoteclient attribute)": [[3, "ccnp.quote.quote_sdk.QuoteClient._user_data"]], "_version (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._version"]], "_xfam (ccnp.quote.quote_sdk.quotetdx attribute)": [[3, "ccnp.quote.quote_sdk.QuoteTDX._xfam"]], "attestation_key (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.attestation_key"]], "ccnp.quote": [[3, "module-ccnp.quote"]], "ccnp.quote.quote_sdk": [[3, "module-ccnp.quote.quote_sdk"]], "cert_data (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.cert_data"]], "get_quote() (ccnp.quote.quote_sdk.quote static method)": [[3, "ccnp.quote.quote_sdk.Quote.get_quote"]], "mrconfigid (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrconfigid"]], "mrowner (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrowner"]], "mrownerconfig (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrownerconfig"]], "mrseam (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrseam"]], "mrsignerseam (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrsignerseam"]], "mrtd (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.mrtd"]], "parse() (ccnp.quote.quote_sdk.quotetdx method)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.parse"]], "quote (ccnp.quote.quote_sdk.quote property)": [[3, "ccnp.quote.quote_sdk.Quote.quote"]], "quote_type (ccnp.quote.quote_sdk.quote property)": [[3, "ccnp.quote.quote_sdk.Quote.quote_type"]], "report_data (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.report_data"]], "request() (ccnp.quote.quote_sdk.quoteclient method)": [[3, "ccnp.quote.quote_sdk.QuoteClient.request"]], "rtmrs (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.rtmrs"]], "seam_attributes (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.seam_attributes"]], "signature (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.signature"]], "td_attributes (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.td_attributes"]], "tdreport (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.tdreport"]], "tee_type (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.tee_type"]], "version (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.version"]], "xfam (ccnp.quote.quote_sdk.quotetdx property)": [[3, "ccnp.quote.quote_sdk.QuoteTDX.xfam"]]}})